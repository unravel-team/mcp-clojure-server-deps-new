(ns {{top/ns}}.{{main/ns}}
  (:gen-class)
  (:require [io.modelcontext.clojure-sdk.stdio-server :as io-server]
            [me.vedang.logger.interface :as log]))

(def tool-{{main/ns}}
  {:name "{{main/ns}}",
   :description
   "A tool to do something interesting
   - Use when ...
   - Provide ... as inputs",
   :inputSchema
   {:type "object",
    :properties {"name"
                 {:type "string",
                  :description
                  "Example name to save properties against"},
                 "data"
                 {:type "array",
                  :items {:type "object"},
                  :description "Example input rows as objects"}},
    :required ["name" "data"]},
   :handler (fn [{:keys [name data]}]
              ;; I don't do a whole lot
              {:type "text", :text (format "I didn't do much: '%s', %s" name data)})})

(def {{main/ns}}-spec
  {:name "{{main/ns}}",
   :version "1.0.0",
   :tools [tool-{{main/ns}}]})

(defn -main
  [& _args]
  (let [server-id (random-uuid)]
    (log/debug "[MAIN] Starting {{main/ns}}: " server-id)
    @(io-server/run! (assoc {{main/ns}}-spec :server-id server-id))))
